進化的プログラミング
進化的プログラミング（しんかてきプログラミング、Evolutionary Programming）は、4つの主要な進化的アルゴリズム方法論の1つである。
概要[編集]
人工知能の生成を意図した学習過程として、シミュレーションされた進化を使った Lawrence J. Fogel が1960年に最初に使った用語である。Fogel は予測機として有限状態機械を使い、それを発展させた。
その後、彼の息子の David B. Fogelにより実数関数の最適化問題を探索する手法に拡張され、進化的戦略と類似した方法に発展した。
進化的プログラミングの中心となるのは突然変異である。親ベクトルに対してランダムな変化を加えて子ベクトルを生成し、それらを評価して、ランダムに個体を選んで適用度を比較する。これによって次の世代を選び、解が収束するまでこれを繰り返していく。
現在、進化的プログラミングは他の3つの方法論に比べると特に決まった構造が無く、進化的コンピューティング全般を漠然と指す用語となっている。進化的プログラミングと進化的戦略を区別することは困難になってきている。
